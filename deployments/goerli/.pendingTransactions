{
  "0x12664c403c7991c3ec81ef3933ab6a8d9b9157f55e84e34cd38965bc815a45bb": {
    "name": "ERC20Token",
    "deployment": {
      "_format": "hh-sol-artifact-1",
      "contractName": "ERC20WithInitialBalance",
      "sourceName": "src/Test/ERC20WithInitialBalance.sol",
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "supply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "initialIndividualSupply",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "gateway",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        {
          "inputs": [],
          "name": "DOMAIN_SEPARATOR",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "remaining",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "success",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ],
          "stateMutability": "pure",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "name": "nonces",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "name": "permit",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "success",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "success",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "bytecode": "0x61010060405234801561001157600080fd5b50604051610de9380380610de98339818101604052606081101561003457600080fd5b508051602080830151604093840151608093845260a09182526001600160601b0319606091821b1660c05284518086018652600481526321b7b4b760e11b908401528451808601865260018152603160f81b9084015284517f91ab3d17e3a50a9d89e63fd30b92be7f5336b03b287bb946787a83a9d62a2766818501527f07fa16837b0b8cc4f178ea82c59160a6e5e93daa4f0f237ee2f1ae74266c5fb7818701527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc69181019190915230818501528451808203909401845201909252805191012060e05260805160a05160c05160601c60e051610c7a61016f600039806105c852806107695250806103a552806104d75280610951525080610bec5280610c155250806104945280610b975280610bca5250610c7a6000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c806370a0823111610081578063a9059cbb1161005b578063a9059cbb14610260578063d505accf1461028c578063dd62ed3e146102df576100d4565b806370a082311461020c5780637ecebe001461023257806395d89b4114610258576100d4565b806323b872dd116100b257806323b872dd146101b0578063313ce567146101e65780633644e51514610204576100d4565b806306fdde03146100d9578063095ea7b31461015657806318160ddd14610196575b600080fd5b6100e161030d565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561011b578181015183820152602001610103565b50505050905090810190601f1680156101485780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101826004803603604081101561016c57600080fd5b506001600160a01b038135169060200135610346565b604080519115158252519081900360200190f35b61019e610492565b60408051918252519081900360200190f35b610182600480360360608110156101c657600080fd5b506001600160a01b038135811691602081013590911690604001356104b6565b6101ee6105c1565b6040805160ff9092168252519081900360200190f35b61019e6105c6565b61019e6004803603602081101561022257600080fd5b50356001600160a01b03166105ea565b61019e6004803603602081101561024857600080fd5b50356001600160a01b03166105fc565b6100e1610617565b6101826004803603604081101561027657600080fd5b506001600160a01b038135169060200135610650565b6102dd600480360360e08110156102a257600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060ff6080820135169060a08101359060c00135610666565b005b61019e600480360360408110156102f557600080fd5b506001600160a01b038135811691602001351661094d565b6040518060400160405280600481526020017f436f696e0000000000000000000000000000000000000000000000000000000081525081565b60006001600160a01b0383166103a3576040805162461bcd60e51b815260206004820152601460248201527f494e56414c49445f5a45524f5f41444452455353000000000000000000000000604482015290519081900360640190fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b0316141561042a576040805162461bcd60e51b815260206004820152601b60248201527f494d4d555441424c455f474154455741595f414c4c4f57414e43450000000000604482015290519081900360640190fd5b3360008181526001602090815260408083206001600160a01b03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060015b92915050565b7f000000000000000000000000000000000000000000000000000000000000000090565b6000336001600160a01b038516148015906104fa5750336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614155b156105ac576001600160a01b038416600090815260016020908152604080832033845290915290205460001981146105aa5782811015610581576040805162461bcd60e51b815260206004820152601460248201527f4e4f545f454e4f5547485f414c4c4f57414e4345000000000000000000000000604482015290519081900360640190fd5b6001600160a01b0385166000908152600160209081526040808320338452909152902083820390555b505b6105b78484846109be565b5060019392505050565b601290565b7f000000000000000000000000000000000000000000000000000000000000000090565b60006105f582610b68565b9392505050565b6001600160a01b031660009081526004602052604090205490565b6040518060400160405280600481526020017f434f494e0000000000000000000000000000000000000000000000000000000081525081565b600061065d3384846109be565b50600192915050565b6001600160a01b0387166106c1576040805162461bcd60e51b815260206004820152601460248201527f494e56414c49445f5a45524f5f41444452455353000000000000000000000000604482015290519081900360640190fd5b6001600160a01b0380881660008181526004602090815260408083205481517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98185015280830195909552948b166060850152608084018a905260a0840185905260c08085018a90528151808603909101815260e0850182528051908301207f19010000000000000000000000000000000000000000000000000000000000006101008601527f000000000000000000000000000000000000000000000000000000000000000061010286015261012280860191909152815180860390910181526101428501808352815191840191909120939052610162840180825283905260ff88166101828501526101a284018790526101c284018690525191926001926101e28083019392601f198301929081900390910190855afa15801561080b573d6000803e3d6000fd5b505050602060405103516001600160a01b0316896001600160a01b03161461087a576040805162461bcd60e51b815260206004820152601160248201527f494e56414c49445f5349474e4154555245000000000000000000000000000000604482015290519081900360640190fd5b8515806108875750854211155b6108d8576040805162461bcd60e51b815260206004820152600860248201527f544f4f5f4c415445000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b6001600160a01b03808a16600081815260046020908152604080832060018089019091558252808320948d16808452948252918290208b905581518b815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050505050505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b03161415610992575060001961048c565b506001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b038216610a19576040805162461bcd60e51b815260206004820152601460248201527f494e56414c49445f5a45524f5f41444452455353000000000000000000000000604482015290519081900360640190fd5b600080610a2585610b68565b9150915082811015610a7e576040805162461bcd60e51b815260206004820152601260248201527f4e4f545f454e4f5547485f42414c414e43450000000000000000000000000000604482015290519081900360640190fd5b81610aaf5760028054820190556001600160a01b0385166000908152600360205260409020805460ff191660011790555b6001600160a01b03851660009081526020819052604090208382039055610ad584610b68565b909250905081610b0b5760028054820190556001600160a01b0384166000908152600360205260409020805460ff191660011790555b6001600160a01b038085166000818152602081815260409182902085880190558151878152915192938916927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050505050565b6001600160a01b03811660009081526020818152604080832054600390925282205460ff16158015610bbb57507f0000000000000000000000000000000000000000000000000000000000000000600254105b15610c3a5750506002546000907f0000000000000000000000000000000000000000000000000000000000000000037f0000000000000000000000000000000000000000000000000000000000000000811115610c3557507f00000000000000000000000000000000000000000000000000000000000000005b610c3f565b600191505b91509156fea26469706673582212202913bd387abf3da38ae1b8c06c0d748a7cc8c427131484ae6534994a5082eba964736f6c63430007010033",
      "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100d45760003560e01c806370a0823111610081578063a9059cbb1161005b578063a9059cbb14610260578063d505accf1461028c578063dd62ed3e146102df576100d4565b806370a082311461020c5780637ecebe001461023257806395d89b4114610258576100d4565b806323b872dd116100b257806323b872dd146101b0578063313ce567146101e65780633644e51514610204576100d4565b806306fdde03146100d9578063095ea7b31461015657806318160ddd14610196575b600080fd5b6100e161030d565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561011b578181015183820152602001610103565b50505050905090810190601f1680156101485780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101826004803603604081101561016c57600080fd5b506001600160a01b038135169060200135610346565b604080519115158252519081900360200190f35b61019e610492565b60408051918252519081900360200190f35b610182600480360360608110156101c657600080fd5b506001600160a01b038135811691602081013590911690604001356104b6565b6101ee6105c1565b6040805160ff9092168252519081900360200190f35b61019e6105c6565b61019e6004803603602081101561022257600080fd5b50356001600160a01b03166105ea565b61019e6004803603602081101561024857600080fd5b50356001600160a01b03166105fc565b6100e1610617565b6101826004803603604081101561027657600080fd5b506001600160a01b038135169060200135610650565b6102dd600480360360e08110156102a257600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060ff6080820135169060a08101359060c00135610666565b005b61019e600480360360408110156102f557600080fd5b506001600160a01b038135811691602001351661094d565b6040518060400160405280600481526020017f436f696e0000000000000000000000000000000000000000000000000000000081525081565b60006001600160a01b0383166103a3576040805162461bcd60e51b815260206004820152601460248201527f494e56414c49445f5a45524f5f41444452455353000000000000000000000000604482015290519081900360640190fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b0316141561042a576040805162461bcd60e51b815260206004820152601b60248201527f494d4d555441424c455f474154455741595f414c4c4f57414e43450000000000604482015290519081900360640190fd5b3360008181526001602090815260408083206001600160a01b03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060015b92915050565b7f000000000000000000000000000000000000000000000000000000000000000090565b6000336001600160a01b038516148015906104fa5750336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614155b156105ac576001600160a01b038416600090815260016020908152604080832033845290915290205460001981146105aa5782811015610581576040805162461bcd60e51b815260206004820152601460248201527f4e4f545f454e4f5547485f414c4c4f57414e4345000000000000000000000000604482015290519081900360640190fd5b6001600160a01b0385166000908152600160209081526040808320338452909152902083820390555b505b6105b78484846109be565b5060019392505050565b601290565b7f000000000000000000000000000000000000000000000000000000000000000090565b60006105f582610b68565b9392505050565b6001600160a01b031660009081526004602052604090205490565b6040518060400160405280600481526020017f434f494e0000000000000000000000000000000000000000000000000000000081525081565b600061065d3384846109be565b50600192915050565b6001600160a01b0387166106c1576040805162461bcd60e51b815260206004820152601460248201527f494e56414c49445f5a45524f5f41444452455353000000000000000000000000604482015290519081900360640190fd5b6001600160a01b0380881660008181526004602090815260408083205481517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98185015280830195909552948b166060850152608084018a905260a0840185905260c08085018a90528151808603909101815260e0850182528051908301207f19010000000000000000000000000000000000000000000000000000000000006101008601527f000000000000000000000000000000000000000000000000000000000000000061010286015261012280860191909152815180860390910181526101428501808352815191840191909120939052610162840180825283905260ff88166101828501526101a284018790526101c284018690525191926001926101e28083019392601f198301929081900390910190855afa15801561080b573d6000803e3d6000fd5b505050602060405103516001600160a01b0316896001600160a01b03161461087a576040805162461bcd60e51b815260206004820152601160248201527f494e56414c49445f5349474e4154555245000000000000000000000000000000604482015290519081900360640190fd5b8515806108875750854211155b6108d8576040805162461bcd60e51b815260206004820152600860248201527f544f4f5f4c415445000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b6001600160a01b03808a16600081815260046020908152604080832060018089019091558252808320948d16808452948252918290208b905581518b815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050505050505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b03161415610992575060001961048c565b506001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b038216610a19576040805162461bcd60e51b815260206004820152601460248201527f494e56414c49445f5a45524f5f41444452455353000000000000000000000000604482015290519081900360640190fd5b600080610a2585610b68565b9150915082811015610a7e576040805162461bcd60e51b815260206004820152601260248201527f4e4f545f454e4f5547485f42414c414e43450000000000000000000000000000604482015290519081900360640190fd5b81610aaf5760028054820190556001600160a01b0385166000908152600360205260409020805460ff191660011790555b6001600160a01b03851660009081526020819052604090208382039055610ad584610b68565b909250905081610b0b5760028054820190556001600160a01b0384166000908152600360205260409020805460ff191660011790555b6001600160a01b038085166000818152602081815260409182902085880190558151878152915192938916927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050505050565b6001600160a01b03811660009081526020818152604080832054600390925282205460ff16158015610bbb57507f0000000000000000000000000000000000000000000000000000000000000000600254105b15610c3a5750506002546000907f0000000000000000000000000000000000000000000000000000000000000000037f0000000000000000000000000000000000000000000000000000000000000000811115610c3557507f00000000000000000000000000000000000000000000000000000000000000005b610c3f565b600191505b91509156fea26469706673582212202913bd387abf3da38ae1b8c06c0d748a7cc8c427131484ae6534994a5082eba964736f6c63430007010033",
      "linkReferences": {},
      "deployedLinkReferences": {},
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
          },
          "approve(address,uint256)": {
            "details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
          },
          "totalSupply()": {
            "details": "Returns the amount of tokens in existence."
          }
        },
        "version": 1
      },
      "evm": {
        "bytecode": {
          "linkReferences": {},
          "object": "61010060405234801561001157600080fd5b50604051610de9380380610de98339818101604052606081101561003457600080fd5b508051602080830151604093840151608093845260a09182526001600160601b0319606091821b1660c05284518086018652600481526321b7b4b760e11b908401528451808601865260018152603160f81b9084015284517f91ab3d17e3a50a9d89e63fd30b92be7f5336b03b287bb946787a83a9d62a2766818501527f07fa16837b0b8cc4f178ea82c59160a6e5e93daa4f0f237ee2f1ae74266c5fb7818701527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc69181019190915230818501528451808203909401845201909252805191012060e05260805160a05160c05160601c60e051610c7a61016f600039806105c852806107695250806103a552806104d75280610951525080610bec5280610c155250806104945280610b975280610bca5250610c7a6000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c806370a0823111610081578063a9059cbb1161005b578063a9059cbb14610260578063d505accf1461028c578063dd62ed3e146102df576100d4565b806370a082311461020c5780637ecebe001461023257806395d89b4114610258576100d4565b806323b872dd116100b257806323b872dd146101b0578063313ce567146101e65780633644e51514610204576100d4565b806306fdde03146100d9578063095ea7b31461015657806318160ddd14610196575b600080fd5b6100e161030d565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561011b578181015183820152602001610103565b50505050905090810190601f1680156101485780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101826004803603604081101561016c57600080fd5b506001600160a01b038135169060200135610346565b604080519115158252519081900360200190f35b61019e610492565b60408051918252519081900360200190f35b610182600480360360608110156101c657600080fd5b506001600160a01b038135811691602081013590911690604001356104b6565b6101ee6105c1565b6040805160ff9092168252519081900360200190f35b61019e6105c6565b61019e6004803603602081101561022257600080fd5b50356001600160a01b03166105ea565b61019e6004803603602081101561024857600080fd5b50356001600160a01b03166105fc565b6100e1610617565b6101826004803603604081101561027657600080fd5b506001600160a01b038135169060200135610650565b6102dd600480360360e08110156102a257600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060ff6080820135169060a08101359060c00135610666565b005b61019e600480360360408110156102f557600080fd5b506001600160a01b038135811691602001351661094d565b6040518060400160405280600481526020017f436f696e0000000000000000000000000000000000000000000000000000000081525081565b60006001600160a01b0383166103a3576040805162461bcd60e51b815260206004820152601460248201527f494e56414c49445f5a45524f5f41444452455353000000000000000000000000604482015290519081900360640190fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b0316141561042a576040805162461bcd60e51b815260206004820152601b60248201527f494d4d555441424c455f474154455741595f414c4c4f57414e43450000000000604482015290519081900360640190fd5b3360008181526001602090815260408083206001600160a01b03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060015b92915050565b7f000000000000000000000000000000000000000000000000000000000000000090565b6000336001600160a01b038516148015906104fa5750336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614155b156105ac576001600160a01b038416600090815260016020908152604080832033845290915290205460001981146105aa5782811015610581576040805162461bcd60e51b815260206004820152601460248201527f4e4f545f454e4f5547485f414c4c4f57414e4345000000000000000000000000604482015290519081900360640190fd5b6001600160a01b0385166000908152600160209081526040808320338452909152902083820390555b505b6105b78484846109be565b5060019392505050565b601290565b7f000000000000000000000000000000000000000000000000000000000000000090565b60006105f582610b68565b9392505050565b6001600160a01b031660009081526004602052604090205490565b6040518060400160405280600481526020017f434f494e0000000000000000000000000000000000000000000000000000000081525081565b600061065d3384846109be565b50600192915050565b6001600160a01b0387166106c1576040805162461bcd60e51b815260206004820152601460248201527f494e56414c49445f5a45524f5f41444452455353000000000000000000000000604482015290519081900360640190fd5b6001600160a01b0380881660008181526004602090815260408083205481517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98185015280830195909552948b166060850152608084018a905260a0840185905260c08085018a90528151808603909101815260e0850182528051908301207f19010000000000000000000000000000000000000000000000000000000000006101008601527f000000000000000000000000000000000000000000000000000000000000000061010286015261012280860191909152815180860390910181526101428501808352815191840191909120939052610162840180825283905260ff88166101828501526101a284018790526101c284018690525191926001926101e28083019392601f198301929081900390910190855afa15801561080b573d6000803e3d6000fd5b505050602060405103516001600160a01b0316896001600160a01b03161461087a576040805162461bcd60e51b815260206004820152601160248201527f494e56414c49445f5349474e4154555245000000000000000000000000000000604482015290519081900360640190fd5b8515806108875750854211155b6108d8576040805162461bcd60e51b815260206004820152600860248201527f544f4f5f4c415445000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b6001600160a01b03808a16600081815260046020908152604080832060018089019091558252808320948d16808452948252918290208b905581518b815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050505050505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b03161415610992575060001961048c565b506001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b038216610a19576040805162461bcd60e51b815260206004820152601460248201527f494e56414c49445f5a45524f5f41444452455353000000000000000000000000604482015290519081900360640190fd5b600080610a2585610b68565b9150915082811015610a7e576040805162461bcd60e51b815260206004820152601260248201527f4e4f545f454e4f5547485f42414c414e43450000000000000000000000000000604482015290519081900360640190fd5b81610aaf5760028054820190556001600160a01b0385166000908152600360205260409020805460ff191660011790555b6001600160a01b03851660009081526020819052604090208382039055610ad584610b68565b909250905081610b0b5760028054820190556001600160a01b0384166000908152600360205260409020805460ff191660011790555b6001600160a01b038085166000818152602081815260409182902085880190558151878152915192938916927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050505050565b6001600160a01b03811660009081526020818152604080832054600390925282205460ff16158015610bbb57507f0000000000000000000000000000000000000000000000000000000000000000600254105b15610c3a5750506002546000907f0000000000000000000000000000000000000000000000000000000000000000037f0000000000000000000000000000000000000000000000000000000000000000811115610c3557507f00000000000000000000000000000000000000000000000000000000000000005b610c3f565b600191505b91509156fea26469706673582212202913bd387abf3da38ae1b8c06c0d748a7cc8c427131484ae6534994a5082eba964736f6c63430007010033",
          "opcodes": "PUSH2 0x100 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xDE9 CODESIZE SUB DUP1 PUSH2 0xDE9 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 DUP1 DUP4 ADD MLOAD PUSH1 0x40 SWAP4 DUP5 ADD MLOAD PUSH1 0x80 SWAP4 DUP5 MSTORE PUSH1 0xA0 SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 SWAP2 DUP3 SHL AND PUSH1 0xC0 MSTORE DUP5 MLOAD DUP1 DUP7 ADD DUP7 MSTORE PUSH1 0x4 DUP2 MSTORE PUSH4 0x21B7B4B7 PUSH1 0xE1 SHL SWAP1 DUP5 ADD MSTORE DUP5 MLOAD DUP1 DUP7 ADD DUP7 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x31 PUSH1 0xF8 SHL SWAP1 DUP5 ADD MSTORE DUP5 MLOAD PUSH32 0x91AB3D17E3A50A9D89E63FD30B92BE7F5336B03B287BB946787A83A9D62A2766 DUP2 DUP6 ADD MSTORE PUSH32 0x7FA16837B0B8CC4F178EA82C59160A6E5E93DAA4F0F237EE2F1AE74266C5FB7 DUP2 DUP8 ADD MSTORE PUSH32 0xC89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE ADDRESS DUP2 DUP6 ADD MSTORE DUP5 MLOAD DUP1 DUP3 SUB SWAP1 SWAP5 ADD DUP5 MSTORE ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH1 0xE0 MSTORE PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0x60 SHR PUSH1 0xE0 MLOAD PUSH2 0xC7A PUSH2 0x16F PUSH1 0x0 CODECOPY DUP1 PUSH2 0x5C8 MSTORE DUP1 PUSH2 0x769 MSTORE POP DUP1 PUSH2 0x3A5 MSTORE DUP1 PUSH2 0x4D7 MSTORE DUP1 PUSH2 0x951 MSTORE POP DUP1 PUSH2 0xBEC MSTORE DUP1 PUSH2 0xC15 MSTORE POP DUP1 PUSH2 0x494 MSTORE DUP1 PUSH2 0xB97 MSTORE DUP1 PUSH2 0xBCA MSTORE POP PUSH2 0xC7A PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xD4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2DF JUMPI PUSH2 0xD4 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x258 JUMPI PUSH2 0xD4 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x204 JUMPI PUSH2 0xD4 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD9 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x196 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE1 PUSH2 0x30D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x11B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x103 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x148 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x16C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x346 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x19E PUSH2 0x492 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x4B6 JUMP JUMPDEST PUSH2 0x1EE PUSH2 0x5C1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x19E PUSH2 0x5C6 JUMP JUMPDEST PUSH2 0x19E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x222 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x5EA JUMP JUMPDEST PUSH2 0x19E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x248 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x5FC JUMP JUMPDEST PUSH2 0xE1 PUSH2 0x617 JUMP JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x276 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x650 JUMP JUMPDEST PUSH2 0x2DD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x2A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xFF PUSH1 0x80 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0xA0 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xC0 ADD CALLDATALOAD PUSH2 0x666 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x94D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x436F696E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3A3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F5A45524F5F41444452455353000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x42A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494D4D555441424C455F474154455741595F414C4C4F57414E43450000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP7 SWAP1 SSTORE DUP1 MLOAD DUP7 DUP2 MSTORE SWAP1 MLOAD SWAP3 SWAP4 SWAP3 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EQ DUP1 ISZERO SWAP1 PUSH2 0x4FA JUMPI POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x5AC JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x5AA JUMPI DUP3 DUP2 LT ISZERO PUSH2 0x581 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E4F545F454E4F5547485F414C4C4F57414E4345000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP4 DUP3 SUB SWAP1 SSTORE JUMPDEST POP JUMPDEST PUSH2 0x5B7 DUP5 DUP5 DUP5 PUSH2 0x9BE JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x12 SWAP1 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F5 DUP3 PUSH2 0xB68 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x434F494E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x65D CALLER DUP5 DUP5 PUSH2 0x9BE JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH2 0x6C1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F5A45524F5F41444452455353000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP2 MLOAD PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 DUP6 ADD MSTORE DUP1 DUP4 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP5 DUP12 AND PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD DUP11 SWAP1 MSTORE PUSH1 0xA0 DUP5 ADD DUP6 SWAP1 MSTORE PUSH1 0xC0 DUP1 DUP6 ADD DUP11 SWAP1 MSTORE DUP2 MLOAD DUP1 DUP7 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xE0 DUP6 ADD DUP3 MSTORE DUP1 MLOAD SWAP1 DUP4 ADD KECCAK256 PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 PUSH2 0x100 DUP7 ADD MSTORE PUSH32 0x0 PUSH2 0x102 DUP7 ADD MSTORE PUSH2 0x122 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 MLOAD DUP1 DUP7 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH2 0x142 DUP6 ADD DUP1 DUP4 MSTORE DUP2 MLOAD SWAP2 DUP5 ADD SWAP2 SWAP1 SWAP2 KECCAK256 SWAP4 SWAP1 MSTORE PUSH2 0x162 DUP5 ADD DUP1 DUP3 MSTORE DUP4 SWAP1 MSTORE PUSH1 0xFF DUP9 AND PUSH2 0x182 DUP6 ADD MSTORE PUSH2 0x1A2 DUP5 ADD DUP8 SWAP1 MSTORE PUSH2 0x1C2 DUP5 ADD DUP7 SWAP1 MSTORE MLOAD SWAP2 SWAP3 PUSH1 0x1 SWAP3 PUSH2 0x1E2 DUP1 DUP4 ADD SWAP4 SWAP3 PUSH1 0x1F NOT DUP4 ADD SWAP3 SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x80B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x87A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F5349474E4154555245000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP6 ISZERO DUP1 PUSH2 0x887 JUMPI POP DUP6 TIMESTAMP GT ISZERO JUMPDEST PUSH2 0x8D8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x544F4F5F4C415445000000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 DUP1 DUP10 ADD SWAP1 SWAP2 SSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SWAP5 DUP14 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP12 SWAP1 SSTORE DUP2 MLOAD DUP12 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x992 JUMPI POP PUSH1 0x0 NOT PUSH2 0x48C JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA19 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F5A45524F5F41444452455353000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xA25 DUP6 PUSH2 0xB68 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP3 DUP2 LT ISZERO PUSH2 0xA7E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E4F545F454E4F5547485F42414C414E43450000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 PUSH2 0xAAF JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 DUP3 SUB SWAP1 SSTORE PUSH2 0xAD5 DUP5 PUSH2 0xB68 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0xB0B JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP6 DUP9 ADD SWAP1 SSTORE DUP2 MLOAD DUP8 DUP2 MSTORE SWAP2 MLOAD SWAP3 SWAP4 DUP10 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x3 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xBBB JUMPI POP PUSH32 0x0 PUSH1 0x2 SLOAD LT JUMPDEST ISZERO PUSH2 0xC3A JUMPI POP POP PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 PUSH32 0x0 SUB PUSH32 0x0 DUP2 GT ISZERO PUSH2 0xC35 JUMPI POP PUSH32 0x0 JUMPDEST PUSH2 0xC3F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP JUMPDEST SWAP2 POP SWAP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x29 SGT 0xBD CODESIZE PUSH27 0xBF3DA38AE1B8C06C0D748A7CC8C427131484AE6534994A5082EBA9 PUSH5 0x736F6C6343 STOP SMOD ADD STOP CALLER ",
          "sourceMap": "223:2145:9:-:0;;;1882:484;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1882:484:9;;;;;;;;;;;;5802:21:7;;;;5833:50;;;;-1:-1:-1;;;;;;1882:484:9;5893:18:7;;;;;;2259:4:9;;;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;;2259:4:9;;::::1;::::0;2293:10;;;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;;2293:10:9;;::::1;::::0;2118:231;;2146:79:::1;2118:231:::0;;::::1;::::0;2243:22;2118:231;;;;2283:21;2118:231;;;;;;;2330:4:::1;2118:231:::0;;;;;;;;;;;;;;;;;;2095:264;;;::::1;::::0;2076:283:::1;::::0;223:2145;;;;;;;;;;;;;;;;;;;;"
        },
        "deployedBytecode": {
          "immutableReferences": {
            "1263": [
              {
                "length": 32,
                "start": 1172
              },
              {
                "length": 32,
                "start": 2967
              },
              {
                "length": 32,
                "start": 3018
              }
            ],
            "1265": [
              {
                "length": 32,
                "start": 3052
              },
              {
                "length": 32,
                "start": 3093
              }
            ],
            "1283": [
              {
                "length": 32,
                "start": 933
              },
              {
                "length": 32,
                "start": 1239
              },
              {
                "length": 32,
                "start": 2385
              }
            ],
            "1579": [
              {
                "length": 32,
                "start": 1480
              },
              {
                "length": 32,
                "start": 1897
              }
            ]
          },
          "linkReferences": {},
          "object": "608060405234801561001057600080fd5b50600436106100d45760003560e01c806370a0823111610081578063a9059cbb1161005b578063a9059cbb14610260578063d505accf1461028c578063dd62ed3e146102df576100d4565b806370a082311461020c5780637ecebe001461023257806395d89b4114610258576100d4565b806323b872dd116100b257806323b872dd146101b0578063313ce567146101e65780633644e51514610204576100d4565b806306fdde03146100d9578063095ea7b31461015657806318160ddd14610196575b600080fd5b6100e161030d565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561011b578181015183820152602001610103565b50505050905090810190601f1680156101485780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101826004803603604081101561016c57600080fd5b506001600160a01b038135169060200135610346565b604080519115158252519081900360200190f35b61019e610492565b60408051918252519081900360200190f35b610182600480360360608110156101c657600080fd5b506001600160a01b038135811691602081013590911690604001356104b6565b6101ee6105c1565b6040805160ff9092168252519081900360200190f35b61019e6105c6565b61019e6004803603602081101561022257600080fd5b50356001600160a01b03166105ea565b61019e6004803603602081101561024857600080fd5b50356001600160a01b03166105fc565b6100e1610617565b6101826004803603604081101561027657600080fd5b506001600160a01b038135169060200135610650565b6102dd600480360360e08110156102a257600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060ff6080820135169060a08101359060c00135610666565b005b61019e600480360360408110156102f557600080fd5b506001600160a01b038135811691602001351661094d565b6040518060400160405280600481526020017f436f696e0000000000000000000000000000000000000000000000000000000081525081565b60006001600160a01b0383166103a3576040805162461bcd60e51b815260206004820152601460248201527f494e56414c49445f5a45524f5f41444452455353000000000000000000000000604482015290519081900360640190fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b0316141561042a576040805162461bcd60e51b815260206004820152601b60248201527f494d4d555441424c455f474154455741595f414c4c4f57414e43450000000000604482015290519081900360640190fd5b3360008181526001602090815260408083206001600160a01b03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060015b92915050565b7f000000000000000000000000000000000000000000000000000000000000000090565b6000336001600160a01b038516148015906104fa5750336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614155b156105ac576001600160a01b038416600090815260016020908152604080832033845290915290205460001981146105aa5782811015610581576040805162461bcd60e51b815260206004820152601460248201527f4e4f545f454e4f5547485f414c4c4f57414e4345000000000000000000000000604482015290519081900360640190fd5b6001600160a01b0385166000908152600160209081526040808320338452909152902083820390555b505b6105b78484846109be565b5060019392505050565b601290565b7f000000000000000000000000000000000000000000000000000000000000000090565b60006105f582610b68565b9392505050565b6001600160a01b031660009081526004602052604090205490565b6040518060400160405280600481526020017f434f494e0000000000000000000000000000000000000000000000000000000081525081565b600061065d3384846109be565b50600192915050565b6001600160a01b0387166106c1576040805162461bcd60e51b815260206004820152601460248201527f494e56414c49445f5a45524f5f41444452455353000000000000000000000000604482015290519081900360640190fd5b6001600160a01b0380881660008181526004602090815260408083205481517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98185015280830195909552948b166060850152608084018a905260a0840185905260c08085018a90528151808603909101815260e0850182528051908301207f19010000000000000000000000000000000000000000000000000000000000006101008601527f000000000000000000000000000000000000000000000000000000000000000061010286015261012280860191909152815180860390910181526101428501808352815191840191909120939052610162840180825283905260ff88166101828501526101a284018790526101c284018690525191926001926101e28083019392601f198301929081900390910190855afa15801561080b573d6000803e3d6000fd5b505050602060405103516001600160a01b0316896001600160a01b03161461087a576040805162461bcd60e51b815260206004820152601160248201527f494e56414c49445f5349474e4154555245000000000000000000000000000000604482015290519081900360640190fd5b8515806108875750854211155b6108d8576040805162461bcd60e51b815260206004820152600860248201527f544f4f5f4c415445000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b6001600160a01b03808a16600081815260046020908152604080832060018089019091558252808320948d16808452948252918290208b905581518b815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050505050505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b03161415610992575060001961048c565b506001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b038216610a19576040805162461bcd60e51b815260206004820152601460248201527f494e56414c49445f5a45524f5f41444452455353000000000000000000000000604482015290519081900360640190fd5b600080610a2585610b68565b9150915082811015610a7e576040805162461bcd60e51b815260206004820152601260248201527f4e4f545f454e4f5547485f42414c414e43450000000000000000000000000000604482015290519081900360640190fd5b81610aaf5760028054820190556001600160a01b0385166000908152600360205260409020805460ff191660011790555b6001600160a01b03851660009081526020819052604090208382039055610ad584610b68565b909250905081610b0b5760028054820190556001600160a01b0384166000908152600360205260409020805460ff191660011790555b6001600160a01b038085166000818152602081815260409182902085880190558151878152915192938916927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050505050565b6001600160a01b03811660009081526020818152604080832054600390925282205460ff16158015610bbb57507f0000000000000000000000000000000000000000000000000000000000000000600254105b15610c3a5750506002546000907f0000000000000000000000000000000000000000000000000000000000000000037f0000000000000000000000000000000000000000000000000000000000000000811115610c3557507f00000000000000000000000000000000000000000000000000000000000000005b610c3f565b600191505b91509156fea26469706673582212202913bd387abf3da38ae1b8c06c0d748a7cc8c427131484ae6534994a5082eba964736f6c63430007010033",
          "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xD4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2DF JUMPI PUSH2 0xD4 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x258 JUMPI PUSH2 0xD4 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x204 JUMPI PUSH2 0xD4 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD9 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x196 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE1 PUSH2 0x30D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x11B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x103 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x148 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x16C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x346 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x19E PUSH2 0x492 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x4B6 JUMP JUMPDEST PUSH2 0x1EE PUSH2 0x5C1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x19E PUSH2 0x5C6 JUMP JUMPDEST PUSH2 0x19E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x222 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x5EA JUMP JUMPDEST PUSH2 0x19E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x248 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x5FC JUMP JUMPDEST PUSH2 0xE1 PUSH2 0x617 JUMP JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x276 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x650 JUMP JUMPDEST PUSH2 0x2DD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x2A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xFF PUSH1 0x80 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0xA0 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xC0 ADD CALLDATALOAD PUSH2 0x666 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x94D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x436F696E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3A3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F5A45524F5F41444452455353000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x42A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494D4D555441424C455F474154455741595F414C4C4F57414E43450000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP7 SWAP1 SSTORE DUP1 MLOAD DUP7 DUP2 MSTORE SWAP1 MLOAD SWAP3 SWAP4 SWAP3 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EQ DUP1 ISZERO SWAP1 PUSH2 0x4FA JUMPI POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x5AC JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x5AA JUMPI DUP3 DUP2 LT ISZERO PUSH2 0x581 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E4F545F454E4F5547485F414C4C4F57414E4345000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP4 DUP3 SUB SWAP1 SSTORE JUMPDEST POP JUMPDEST PUSH2 0x5B7 DUP5 DUP5 DUP5 PUSH2 0x9BE JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x12 SWAP1 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F5 DUP3 PUSH2 0xB68 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x434F494E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x65D CALLER DUP5 DUP5 PUSH2 0x9BE JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH2 0x6C1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F5A45524F5F41444452455353000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP2 MLOAD PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 DUP6 ADD MSTORE DUP1 DUP4 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP5 DUP12 AND PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD DUP11 SWAP1 MSTORE PUSH1 0xA0 DUP5 ADD DUP6 SWAP1 MSTORE PUSH1 0xC0 DUP1 DUP6 ADD DUP11 SWAP1 MSTORE DUP2 MLOAD DUP1 DUP7 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xE0 DUP6 ADD DUP3 MSTORE DUP1 MLOAD SWAP1 DUP4 ADD KECCAK256 PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 PUSH2 0x100 DUP7 ADD MSTORE PUSH32 0x0 PUSH2 0x102 DUP7 ADD MSTORE PUSH2 0x122 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 MLOAD DUP1 DUP7 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH2 0x142 DUP6 ADD DUP1 DUP4 MSTORE DUP2 MLOAD SWAP2 DUP5 ADD SWAP2 SWAP1 SWAP2 KECCAK256 SWAP4 SWAP1 MSTORE PUSH2 0x162 DUP5 ADD DUP1 DUP3 MSTORE DUP4 SWAP1 MSTORE PUSH1 0xFF DUP9 AND PUSH2 0x182 DUP6 ADD MSTORE PUSH2 0x1A2 DUP5 ADD DUP8 SWAP1 MSTORE PUSH2 0x1C2 DUP5 ADD DUP7 SWAP1 MSTORE MLOAD SWAP2 SWAP3 PUSH1 0x1 SWAP3 PUSH2 0x1E2 DUP1 DUP4 ADD SWAP4 SWAP3 PUSH1 0x1F NOT DUP4 ADD SWAP3 SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x80B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x87A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F5349474E4154555245000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP6 ISZERO DUP1 PUSH2 0x887 JUMPI POP DUP6 TIMESTAMP GT ISZERO JUMPDEST PUSH2 0x8D8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x544F4F5F4C415445000000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 DUP1 DUP10 ADD SWAP1 SWAP2 SSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SWAP5 DUP14 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP12 SWAP1 SSTORE DUP2 MLOAD DUP12 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x992 JUMPI POP PUSH1 0x0 NOT PUSH2 0x48C JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA19 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F5A45524F5F41444452455353000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xA25 DUP6 PUSH2 0xB68 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP3 DUP2 LT ISZERO PUSH2 0xA7E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E4F545F454E4F5547485F42414C414E43450000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 PUSH2 0xAAF JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 DUP3 SUB SWAP1 SSTORE PUSH2 0xAD5 DUP5 PUSH2 0xB68 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0xB0B JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP6 DUP9 ADD SWAP1 SSTORE DUP2 MLOAD DUP8 DUP2 MSTORE SWAP2 MLOAD SWAP3 SWAP4 DUP10 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x3 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xBBB JUMPI POP PUSH32 0x0 PUSH1 0x2 SLOAD LT JUMPDEST ISZERO PUSH2 0xC3A JUMPI POP POP PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 PUSH32 0x0 SUB PUSH32 0x0 DUP2 GT ISZERO PUSH2 0xC35 JUMPI POP PUSH32 0x0 JUMPDEST PUSH2 0xC3F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP JUMPDEST SWAP2 POP SWAP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x29 SGT 0xBD CODESIZE PUSH27 0xBF3DA38AE1B8C06C0D748A7CC8C427131484AE6534994A5082EBA9 PUSH5 0x736F6C6343 STOP SMOD ADD STOP CALLER ",
          "sourceMap": "223:2145:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;227:36:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1732:355;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1732:355:7;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;314:100;;;:::i;:::-;;;;;;;;;;;;;;;;1045:681;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1045:681:7;;;;;;;;;;;;;;;;;:::i;792:83::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;495:109:9;;;:::i;420:131:7:-;;;;;;;;;;;;;;;;-1:-1:-1;420:131:7;-1:-1:-1;;;;;420:131:7;;:::i;610:110:9:-;;;;;;;;;;;;;;;;-1:-1:-1;610:110:9;-1:-1:-1;;;;;610:110:9;;:::i;269:38:7:-;;;:::i;881:158::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;881:158:7;;;;;;;;:::i;726:849:9:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;726:849:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;557:229:7;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;557:229:7;;;;;;;;;;:::i;227:36::-;;;;;;;;;;;;;;;;;;;:::o;1732:355::-;1809:12;-1:-1:-1;;;;;1841:21:7;;1833:54;;;;;-1:-1:-1;;;1833:54:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;1916:8;-1:-1:-1;;;;;1905:19:7;:7;-1:-1:-1;;;;;1905:19:7;;;1897:59;;;;;-1:-1:-1;;;1897:59:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;1978:10;1966:23;;;;:11;:23;;;;;;;;-1:-1:-1;;;;;1966:32:7;;;;;;;;;;;;:41;;;2022:37;;;;;;;1966:32;;1978:10;2022:37;;;;;;;;;;;-1:-1:-1;2076:4:7;1732:355;;;;;:::o;314:100::-;395:12;314:100;:::o;1045:681::-;1166:12;1194:10;-1:-1:-1;;;;;1194:18:7;;;;;;:44;;-1:-1:-1;1216:10:7;-1:-1:-1;;;;;1230:8:7;1216:22;;;1194:44;1190:472;;;-1:-1:-1;;;;;1281:17:7;;1254:24;1281:17;;;:11;:17;;;;;;;;1299:10;1281:29;;;;;;;;-1:-1:-1;;1328:32:7;;1324:328;;1531:6;1511:16;:26;;1503:59;;;;;-1:-1:-1;;;1503:59:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1580:17:7;;;;;;:11;:17;;;;;;;;1598:10;1580:29;;;;;;;1612:25;;;1580:57;;1324:328;1190:472;;1671:27;1681:4;1687:2;1691:6;1671:9;:27::i;:::-;-1:-1:-1;1715:4:7;1045:681;;;;;:::o;792:83::-;865:2;792:83;:::o;495:109:9:-;581:16;495:109;:::o;420:131:7:-;486:15;527:17;538:5;527:10;:17::i;:::-;513:31;420:131;-1:-1:-1;;;420:131:7:o;610:110:9:-;-1:-1:-1;;;;;699:14:9;673:7;699:14;;;:7;:14;;;;;;;610:110::o;269:38:7:-;;;;;;;;;;;;;;;;;;;:::o;881:158::-;954:12;978:33;988:10;1000:2;1004:6;978:9;:33::i;:::-;-1:-1:-1;1028:4:7;881:158;;;;:::o;726:849:9:-;-1:-1:-1;;;;;936:19:9;;928:52;;;;;-1:-1:-1;;;928:52:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1014:14:9;;;991:20;1014:14;;;:7;:14;;;;;;;;;1184:74;;379:109;1184:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1174:85;;;;;;1078:195;;;;;1140:16;1078:195;;;;;;;;;;;;;;;;;;;;;;;;;;;;1055:228;;;;;;;;;1310:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1055:228;;1310:26;;;;;;;1014:14;-1:-1:-1;;1310:26:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1301:35:9;:5;-1:-1:-1;;;;;1301:35:9;;1293:65;;;;;-1:-1:-1;;;1293:65:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;1376:13;;;:44;;;1412:8;1393:15;:27;;1376:44;1368:65;;;;;-1:-1:-1;;;1368:65:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1444:14:9;;;;;;;:7;:14;;;;;;;;1476:1;1461:16;;;1444:33;;;1487:18;;;;;:27;;;;;;;;;;;;;:35;;;1537:31;;;;;;;;;;;;;;;;;726:849;;;;;;;;;:::o;557:229:7:-;640:17;684:8;-1:-1:-1;;;;;673:19:7;:7;-1:-1:-1;;;;;673:19:7;;669:67;;;-1:-1:-1;;;708:17:7;;669:67;-1:-1:-1;;;;;;752:18:7;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;557:229::o;2364:816::-;-1:-1:-1;;;;;2482:16:7;;2474:49;;;;;-1:-1:-1;;;2474:49:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;2534:12;2548:22;2574:16;2585:4;2574:10;:16::i;:::-;2533:57;;;;2626:6;2608:14;:24;;2600:55;;;;;-1:-1:-1;;;2600:55:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;2670:7;2665:154;;2693:14;:32;;;;;;-1:-1:-1;;;;;2739:14:7;;2693;2739;;;:8;:14;;;;;:21;;-1:-1:-1;;2739:21:7;-1:-1:-1;2739:21:7;;;2665:154;-1:-1:-1;;;;;2828:15:7;;:9;:15;;;;;;;;;;2846:23;;;2828:41;;2908:14;2919:2;2908:10;:14::i;:::-;2880:42;;-1:-1:-1;2880:42:7;-1:-1:-1;2880:42:7;2932:152;;2960:14;:32;;;;;;-1:-1:-1;;;;;3006:12:7;;2960:14;3006:12;;;:8;:12;;;;;:19;;-1:-1:-1;;3006:19:7;-1:-1:-1;3006:19:7;;;2932:152;-1:-1:-1;;;;;3093:13:7;;;:9;:13;;;;;;;;;;;;3109:23;;;3093:39;;3147:26;;;;;;;3093:13;;3147:26;;;;;;;;;;;;;2364:816;;;;;:::o;3186:454::-;-1:-1:-1;;;;;3295:16:7;;3244:12;3295:16;;;;;;;;;;;;3326:8;:15;;;;;;;;3325:16;:49;;;;;3362:12;3345:14;;:29;3325:49;3321:313;;;-1:-1:-1;;3444:14:7;;3400:5;;3429:12;:29;3486:24;3476:34;;3472:107;;;-1:-1:-1;3540:24:7;3472:107;3321:313;;;3619:4;3609:14;;3321:313;3186:454;;;:::o"
        },
        "gasEstimates": {
          "creation": {
            "codeDepositCost": "638800",
            "executionCost": "infinite",
            "totalCost": "infinite"
          },
          "external": {
            "DOMAIN_SEPARATOR()": "infinite",
            "allowance(address,address)": "infinite",
            "approve(address,uint256)": "infinite",
            "balanceOf(address)": "infinite",
            "decimals()": "252",
            "name()": "infinite",
            "nonces(address)": "1187",
            "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
            "symbol()": "infinite",
            "totalSupply()": "infinite",
            "transfer(address,uint256)": "infinite",
            "transferFrom(address,address,uint256)": "infinite"
          }
        },
        "methodIdentifiers": {
          "DOMAIN_SEPARATOR()": "3644e515",
          "allowance(address,address)": "dd62ed3e",
          "approve(address,uint256)": "095ea7b3",
          "balanceOf(address)": "70a08231",
          "decimals()": "313ce567",
          "name()": "06fdde03",
          "nonces(address)": "7ecebe00",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
          "symbol()": "95d89b41",
          "totalSupply()": "18160ddd",
          "transfer(address,uint256)": "a9059cbb",
          "transferFrom(address,address,uint256)": "23b872dd"
        }
      },
      "metadata": "{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialIndividualSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"gateway\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"test ERC20 token that give initial balance to all accounts that can claim it in time.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Test/ERC20WithInitialBalance.sol\":\"ERC20WithInitialBalance\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.7.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xbd74f587ab9b9711801baf667db1426e4a03fd2d7f15af33e0e0d0394e7cef76\",\"license\":\"MIT\"},\"src/Interfaces/ERC20With2612.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.7.1;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface ERC20With2612 is IERC20 {\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    function nonces(address owner) external view returns (uint256);\\n\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x560256c317f836206c4215c901bf07250fb957340034f67810c912b362c16e34\",\"license\":\"MIT\"},\"src/Test/BaseERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.7.1;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\nabstract contract BaseERC20 is IERC20 {\\n    // //////////////////// EXTERNAL /////////////////////////////\\n\\n    string public constant name = \\\"Coin\\\";\\n    string public constant symbol = \\\"COIN\\\";\\n\\n    function totalSupply() external view override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    function balanceOf(address owner) external view override returns (uint256 balance) {\\n        (, balance) = _balanceOf(owner);\\n    }\\n\\n    function allowance(address owner, address spender) external view override returns (uint256 remaining) {\\n        if (spender == _gateway) {\\n            return 2**256 - 1;\\n        }\\n        return _allowances[owner][spender];\\n    }\\n\\n    function decimals() external pure returns (uint8) {\\n        return uint8(18);\\n    }\\n\\n    function transfer(address to, uint256 amount) external override returns (bool success) {\\n        _transfer(msg.sender, to, amount);\\n        return true;\\n    }\\n\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external override returns (bool success) {\\n        if (msg.sender != from && msg.sender != _gateway) {\\n            uint256 currentAllowance = _allowances[from][msg.sender];\\n            if (currentAllowance != (2**256) - 1) {\\n                // save gas when allowance is maximal by not reducing it (see https://github.com/ethereum/EIPs/issues/717)\\n                require(currentAllowance >= amount, \\\"NOT_ENOUGH_ALLOWANCE\\\");\\n                _allowances[from][msg.sender] = currentAllowance - amount;\\n            }\\n        }\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    function approve(address spender, uint256 amount) external override returns (bool success) {\\n        require(spender != address(0), \\\"INVALID_ZERO_ADDRESS\\\");\\n        require(spender != _gateway, \\\"IMMUTABLE_GATEWAY_ALLOWANCE\\\");\\n        _allowances[msg.sender][spender] = amount;\\n        emit Approval(msg.sender, spender, amount);\\n        return true;\\n    }\\n\\n    // function burn(uint256 amount) external returns (bool) {\\n    //     _burn(msg.sender, amount);\\n    //     return true;\\n    // }\\n\\n    // function hasClaimed() TODO\\n\\n    // ////////////////////////////////////// INTERNALS ///////////////////////////////////////////\\n\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal {\\n        require(to != address(0), \\\"INVALID_ZERO_ADDRESS\\\");\\n        (bool claimed, uint256 currentBalance) = _balanceOf(from);\\n        require(currentBalance >= amount, \\\"NOT_ENOUGH_BALANCE\\\");\\n        if (!claimed) {\\n            _supplyClaimed += currentBalance;\\n            _claimed[from] = true; // TODO use bit in _balances to reuse same slot\\n        }\\n        _balances[from] = currentBalance - amount;\\n\\n        (claimed, currentBalance) = _balanceOf(to);\\n        if (!claimed) {\\n            _supplyClaimed += currentBalance;\\n            _claimed[to] = true; // TODO use bit in _balances to reuse same slot\\n        }\\n        _balances[to] = currentBalance + amount;\\n        emit Transfer(from, to, amount);\\n    }\\n\\n    function _balanceOf(address owner) internal view returns (bool claimed, uint256 balance) {\\n        balance = _balances[owner];\\n        if (!_claimed[owner] && _supplyClaimed < _totalSupply) {\\n            claimed = false;\\n            balance = _totalSupply - _supplyClaimed;\\n            if (balance > _initialIndividualSupply) {\\n                balance = _initialIndividualSupply;\\n            }\\n        } else {\\n            claimed = true;\\n        }\\n    }\\n\\n    // function _mint(address to, uint256 amount) internal {\\n    //     require(to != address(0), \\\"INVALID_ZERO_ADDRESS0\\\");\\n    //     require(amount != 0, \\\"INVALID_AMOUNT\\\");\\n    //     uint256 currentTotalSupply = _totalSupply;\\n    //     uint256 newTotalSupply = currentTotalSupply + amount;\\n    //     require(newTotalSupply > currentTotalSupply, \\\"OVERFLOW\\\");\\n    //     _totalSupply = newTotalSupply;\\n    //     _balances[to] += amount;\\n    //     emit Transfer(address(0), to, amount);\\n    // }\\n\\n    // function _burn(address from, uint256 amount) internal {\\n    //     require(amount > 0, \\\"INVALID_AMOUNT\\\");\\n    //     if (msg.sender != from) {\\n    //         uint256 currentAllowance = _allowances[from][msg.sender];\\n    //         require(\\n    //             currentAllowance >= amount,\\n    //             \\\"NOT_ENOUGH_ALLOWANCE\\\"\\n    //         );\\n    //         if (currentAllowance != (2**256) - 1) {\\n    //             // save gas when allowance is maximal by not reducing it (see https://github.com/ethereum/EIPs/issues/717)\\n    //             _allowances[from][msg.sender] = currentAllowance - amount;\\n    //         }\\n    //     }\\n\\n    //     uint256 currentBalance = balanceOf(from);\\n    //     require(currentBalance >= amount, \\\"NOT_ENOUGH_BALANCE\\\");\\n    //     _balances[from] = currentBalance - amount;\\n    //     _totalSupply -= amount;\\n    //     emit Transfer(from, address(0), amount);\\n    // }\\n\\n    // /////////////////////////////////// STORAGE SLOTS /////////////////////////////////////////\\n\\n    uint256 internal immutable _totalSupply;\\n    uint256 internal immutable _initialIndividualSupply;\\n    mapping(address => uint256) internal _balances;\\n    mapping(address => mapping(address => uint256)) internal _allowances;\\n\\n    uint256 internal _supplyClaimed;\\n    mapping(address => bool) internal _claimed; // TODO optimize it by storing it in the same slot as _balances\\n\\n    address internal immutable _gateway;\\n\\n    // //////////////////////////////////// CONSTRUCTOR ///////////////////////////////////////////\\n    constructor(\\n        uint256 supply,\\n        uint256 initialIndividualSupply,\\n        address gateway\\n    ) {\\n        _totalSupply = supply;\\n        _initialIndividualSupply = initialIndividualSupply;\\n        _gateway = gateway;\\n    }\\n}\\n\",\"keccak256\":\"0xf0b855acf476a78b768a3f185a634edd062245299e64d3f37f3226cbd9804acc\",\"license\":\"MIT\"},\"src/Test/ERC20WithInitialBalance.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.7.1;\\n\\nimport \\\"./BaseERC20.sol\\\";\\nimport \\\"../Interfaces/ERC20With2612.sol\\\";\\n\\n///@notice test ERC20 token that give initial balance to all accounts that can claim it in time.\\ncontract ERC20WithInitialBalance is BaseERC20, ERC20With2612 {\\n    // TODO inject actual hash or use 0.6.12\\n    bytes32 internal constant PERMIT_TYPEHASH = keccak256(\\n        \\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\"\\n    );\\n\\n    function DOMAIN_SEPARATOR() external view override returns (bytes32) {\\n        return _domainSeparator;\\n    }\\n\\n    function nonces(address owner) external view override returns (uint256) {\\n        return _nonces[owner];\\n    }\\n\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external override {\\n        require(owner != address(0), \\\"INVALID_ZERO_ADDRESS\\\");\\n\\n        uint256 currentNonce = _nonces[owner];\\n        bytes32 digest = keccak256(\\n            abi.encodePacked(\\n                \\\"\\\\x19\\\\x01\\\",\\n                _domainSeparator,\\n                keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, currentNonce, deadline))\\n            )\\n        );\\n        require(owner == ecrecover(digest, v, r, s), \\\"INVALID_SIGNATURE\\\");\\n        require(deadline == 0 || block.timestamp <= deadline, \\\"TOO_LATE\\\");\\n\\n        _nonces[owner] = currentNonce + 1;\\n        _allowances[owner][spender] = value;\\n        emit Approval(owner, spender, value);\\n    }\\n\\n    // /////////////////////////////////// STORAGE SLOTS /////////////////////////////////////////\\n\\n    bytes32 internal immutable _domainSeparator;\\n    mapping(address => uint256) internal _nonces;\\n\\n    // //////////////////////////////////// CONSTRUCTOR ///////////////////////////////////////////\\n\\n    constructor(\\n        uint256 supply,\\n        uint256 initialIndividualSupply,\\n        address gateway\\n    ) BaseERC20(supply, initialIndividualSupply, gateway) {\\n        // TODO chainId\\n        _domainSeparator = keccak256(\\n            abi.encode(\\n                keccak256(\\\"EIP712Domain(string name,string version,address verifyingContract)\\\"),\\n                keccak256(bytes(name)),\\n                keccak256(bytes(\\\"1\\\")),\\n                address(this)\\n            )\\n        );\\n    }\\n}\\n\",\"keccak256\":\"0xcd72763860380c14651b3029253cdcd918fe10124c8cbd220aa853ed610b5b6d\",\"license\":\"MIT\"}},\"version\":1}",
      "storageLayout": {
        "storage": [
          {
            "astId": 1269,
            "contract": "src/Test/ERC20WithInitialBalance.sol:ERC20WithInitialBalance",
            "label": "_balances",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_uint256)"
          },
          {
            "astId": 1275,
            "contract": "src/Test/ERC20WithInitialBalance.sol:ERC20WithInitialBalance",
            "label": "_allowances",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
          },
          {
            "astId": 1277,
            "contract": "src/Test/ERC20WithInitialBalance.sol:ERC20WithInitialBalance",
            "label": "_supplyClaimed",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 1281,
            "contract": "src/Test/ERC20WithInitialBalance.sol:ERC20WithInitialBalance",
            "label": "_claimed",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_bool)"
          },
          {
            "astId": 1583,
            "contract": "src/Test/ERC20WithInitialBalance.sol:ERC20WithInitialBalance",
            "label": "_nonces",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_uint256)"
          }
        ],
        "types": {
          "t_address": {
            "encoding": "inplace",
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "encoding": "inplace",
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "encoding": "mapping",
            "key": "t_address",
            "label": "mapping(address => bool)",
            "numberOfBytes": "32",
            "value": "t_bool"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "encoding": "mapping",
            "key": "t_address",
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32",
            "value": "t_mapping(t_address,t_uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "encoding": "mapping",
            "key": "t_address",
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32",
            "value": "t_uint256"
          },
          "t_uint256": {
            "encoding": "inplace",
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "notice": "test ERC20 token that give initial balance to all accounts that can claim it in time.",
        "version": 1
      },
      "solcInput": "{\n  \"language\": \"Solidity\",\n  \"sources\": {\n    \"src/BaseERC20TransferRecipient.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.7.0;\\n\\nimport \\\"./ERC20TransferGateway.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\\\";\\n\\nabstract contract BaseERC20TransferRecipient {\\n    ERC20TransferGateway internal immutable _erc20TransferGateway;\\n\\n    constructor(ERC20TransferGateway erc20TransferGateway) {\\n        _erc20TransferGateway = erc20TransferGateway;\\n    }\\n\\n    function _getTokenTransfer()\\n        internal\\n        view\\n        returns (\\n            address token,\\n            uint256 amount,\\n            address sender\\n        )\\n    {\\n        sender = msg.sender;\\n        if (sender == address(_erc20TransferGateway)) {\\n            return _extractTokenTransfer(msg.data);\\n        }\\n    }\\n\\n    function _extractTokenTransfer(bytes memory data)\\n        internal\\n        pure\\n        returns (\\n            address token,\\n            uint256 amount,\\n            address sender\\n        )\\n    {\\n        uint256 length = data.length;\\n        // solhint-disable-next-line  no-inline-assembly\\n        assembly {\\n            sender := mload(sub(add(data, length), 0x0))\\n            amount := mload(sub(add(data, length), 0x20))\\n            token := mload(sub(add(data, length), 0x40))\\n        }\\n    }\\n}\\n\"\n    },\n    \"src/ERC20TransferGateway.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.7.1;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Address.sol\\\";\\n\\n/* TODO is MetaTransactionReceiver */\\n\\n///@notice Gateway that forwward payment information to the recipient.\\ncontract ERC20TransferGateway {\\n    using SafeERC20 for IERC20;\\n    using Address for address;\\n\\n    function transferERC20AndCall(\\n        IERC20 token,\\n        uint256 amount,\\n        address to,\\n        bytes calldata callData\\n    ) external payable returns (bytes memory) {\\n        address sender = msg.sender; // TODO use _msgSender() from MetaTransactionReceiver\\n        token.safeTransferFrom(sender, to, amount);\\n        return _call(sender, token, amount, to, callData);\\n    }\\n\\n    ///@notice to be called atomically after sending the tokens to the gateway\\n    function forward(\\n        IERC20 token,\\n        uint256 amount,\\n        address to,\\n        bytes calldata callData\\n    ) external payable returns (bytes memory) {\\n        address sender = msg.sender; // TODO use _msgSender() from MetaTransactionReceiver\\n        token.safeTransfer(to, amount);\\n        return _call(sender, token, amount, to, callData);\\n    }\\n\\n    // -------------------------------\\n    // INTERNAL\\n    // -------------------------------\\n\\n    function _call(\\n        address sender,\\n        IERC20 token,\\n        uint256 amount,\\n        address to,\\n        bytes calldata callData\\n    ) internal returns (bytes memory) {\\n        bytes memory data = abi.encodePacked(callData, abi.encode(token, amount, sender));\\n        return to.functionCallWithValue(data, msg.value);\\n    }\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/token/ERC20/IERC20.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.7.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.7.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"../../math/SafeMath.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using SafeMath for uint256;\\n    using Address for address;\\n\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        // solhint-disable-next-line max-line-length\\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \\\"SafeERC20: decreased allowance below zero\\\");\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) { // Return data is optional\\n            // solhint-disable-next-line max-line-length\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/utils/Address.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.7.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\\n        // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\\n        // for accounts without code, i.e. `keccak256('')`\\n        bytes32 codehash;\\n        bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { codehash := extcodehash(account) }\\n        return (codehash != accountHash && codehash != 0x0);\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain`call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n      return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        return _functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        return _functionCallWithValue(target, data, value, errorMessage);\\n    }\\n\\n    function _functionCallWithValue(address target, bytes memory data, uint256 weiValue, string memory errorMessage) private returns (bytes memory) {\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.call{ value: weiValue }(data);\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/math/SafeMath.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.7.0;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts with custom message when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b != 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\"\n    },\n    \"src/Test/ERC20Consumer.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.7.1;\\n\\nimport \\\"../BaseERC20TransferRecipient.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\\\";\\n\\n///@notice Can Receive ERC20 payment either from the transfer getaway or through the standard approval-based mechanism.\\ncontract ERC20Consumer is BaseERC20TransferRecipient {\\n    using SafeERC20 for IERC20;\\n\\n    uint256 internal immutable _price;\\n    IERC20 internal immutable _token;\\n\\n    event Purchase(address buyer, address recipient, uint256 id);\\n\\n    constructor(\\n        ERC20TransferGateway erc20TransferGateway,\\n        address token,\\n        uint256 price\\n    ) BaseERC20TransferRecipient(erc20TransferGateway) {\\n        _token = IERC20(token);\\n        _price = price;\\n    }\\n\\n    function purchase(uint256 id) external {\\n        purchaseFor(address(0), id);\\n    }\\n\\n    function purchaseFor(address recipient, uint256 id) public {\\n        (address token, uint256 amount, address sender) = _getTokenTransfer();\\n        if (token != address(0)) {\\n            require(token == address(_token), \\\"UNEXPECTED_ERC20_TOKEN\\\");\\n            require(amount == _price, \\\"UNEXPECTED_AMOUNT\\\"); // Alternative: reimburse the diff but fails on less\\n        } else {\\n            _token.safeTransferFrom(sender, address(this), _price);\\n        }\\n\\n        // at this point the purchase has been paid and `sender` is the purchaser\\n        if (recipient == address(0)) {\\n            recipient = sender;\\n        }\\n        // TODO transfer NFT to recipient\\n        emit Purchase(sender, recipient, id);\\n    }\\n}\\n\"\n    },\n    \"src/Test/BaseERC20.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.7.1;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\nabstract contract BaseERC20 is IERC20 {\\n    // //////////////////// EXTERNAL /////////////////////////////\\n\\n    string public constant name = \\\"Coin\\\";\\n    string public constant symbol = \\\"COIN\\\";\\n\\n    function totalSupply() external view override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    function balanceOf(address owner) external view override returns (uint256 balance) {\\n        (, balance) = _balanceOf(owner);\\n    }\\n\\n    function allowance(address owner, address spender) external view override returns (uint256 remaining) {\\n        if (spender == _gateway) {\\n            return 2**256 - 1;\\n        }\\n        return _allowances[owner][spender];\\n    }\\n\\n    function decimals() external pure returns (uint8) {\\n        return uint8(18);\\n    }\\n\\n    function transfer(address to, uint256 amount) external override returns (bool success) {\\n        _transfer(msg.sender, to, amount);\\n        return true;\\n    }\\n\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external override returns (bool success) {\\n        if (msg.sender != from && msg.sender != _gateway) {\\n            uint256 currentAllowance = _allowances[from][msg.sender];\\n            if (currentAllowance != (2**256) - 1) {\\n                // save gas when allowance is maximal by not reducing it (see https://github.com/ethereum/EIPs/issues/717)\\n                require(currentAllowance >= amount, \\\"NOT_ENOUGH_ALLOWANCE\\\");\\n                _allowances[from][msg.sender] = currentAllowance - amount;\\n            }\\n        }\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    function approve(address spender, uint256 amount) external override returns (bool success) {\\n        require(spender != address(0), \\\"INVALID_ZERO_ADDRESS\\\");\\n        require(spender != _gateway, \\\"IMMUTABLE_GATEWAY_ALLOWANCE\\\");\\n        _allowances[msg.sender][spender] = amount;\\n        emit Approval(msg.sender, spender, amount);\\n        return true;\\n    }\\n\\n    // function burn(uint256 amount) external returns (bool) {\\n    //     _burn(msg.sender, amount);\\n    //     return true;\\n    // }\\n\\n    // function hasClaimed() TODO\\n\\n    // ////////////////////////////////////// INTERNALS ///////////////////////////////////////////\\n\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal {\\n        require(to != address(0), \\\"INVALID_ZERO_ADDRESS\\\");\\n        (bool claimed, uint256 currentBalance) = _balanceOf(from);\\n        require(currentBalance >= amount, \\\"NOT_ENOUGH_BALANCE\\\");\\n        if (!claimed) {\\n            _supplyClaimed += currentBalance;\\n            _claimed[from] = true; // TODO use bit in _balances to reuse same slot\\n        }\\n        _balances[from] = currentBalance - amount;\\n\\n        (claimed, currentBalance) = _balanceOf(to);\\n        if (!claimed) {\\n            _supplyClaimed += currentBalance;\\n            _claimed[to] = true; // TODO use bit in _balances to reuse same slot\\n        }\\n        _balances[to] = currentBalance + amount;\\n        emit Transfer(from, to, amount);\\n    }\\n\\n    function _balanceOf(address owner) internal view returns (bool claimed, uint256 balance) {\\n        balance = _balances[owner];\\n        if (!_claimed[owner] && _supplyClaimed < _totalSupply) {\\n            claimed = false;\\n            balance = _totalSupply - _supplyClaimed;\\n            if (balance > _initialIndividualSupply) {\\n                balance = _initialIndividualSupply;\\n            }\\n        } else {\\n            claimed = true;\\n        }\\n    }\\n\\n    // function _mint(address to, uint256 amount) internal {\\n    //     require(to != address(0), \\\"INVALID_ZERO_ADDRESS0\\\");\\n    //     require(amount != 0, \\\"INVALID_AMOUNT\\\");\\n    //     uint256 currentTotalSupply = _totalSupply;\\n    //     uint256 newTotalSupply = currentTotalSupply + amount;\\n    //     require(newTotalSupply > currentTotalSupply, \\\"OVERFLOW\\\");\\n    //     _totalSupply = newTotalSupply;\\n    //     _balances[to] += amount;\\n    //     emit Transfer(address(0), to, amount);\\n    // }\\n\\n    // function _burn(address from, uint256 amount) internal {\\n    //     require(amount > 0, \\\"INVALID_AMOUNT\\\");\\n    //     if (msg.sender != from) {\\n    //         uint256 currentAllowance = _allowances[from][msg.sender];\\n    //         require(\\n    //             currentAllowance >= amount,\\n    //             \\\"NOT_ENOUGH_ALLOWANCE\\\"\\n    //         );\\n    //         if (currentAllowance != (2**256) - 1) {\\n    //             // save gas when allowance is maximal by not reducing it (see https://github.com/ethereum/EIPs/issues/717)\\n    //             _allowances[from][msg.sender] = currentAllowance - amount;\\n    //         }\\n    //     }\\n\\n    //     uint256 currentBalance = balanceOf(from);\\n    //     require(currentBalance >= amount, \\\"NOT_ENOUGH_BALANCE\\\");\\n    //     _balances[from] = currentBalance - amount;\\n    //     _totalSupply -= amount;\\n    //     emit Transfer(from, address(0), amount);\\n    // }\\n\\n    // /////////////////////////////////// STORAGE SLOTS /////////////////////////////////////////\\n\\n    uint256 internal immutable _totalSupply;\\n    uint256 internal immutable _initialIndividualSupply;\\n    mapping(address => uint256) internal _balances;\\n    mapping(address => mapping(address => uint256)) internal _allowances;\\n\\n    uint256 internal _supplyClaimed;\\n    mapping(address => bool) internal _claimed; // TODO optimize it by storing it in the same slot as _balances\\n\\n    address internal immutable _gateway;\\n\\n    // //////////////////////////////////// CONSTRUCTOR ///////////////////////////////////////////\\n    constructor(\\n        uint256 supply,\\n        uint256 initialIndividualSupply,\\n        address gateway\\n    ) {\\n        _totalSupply = supply;\\n        _initialIndividualSupply = initialIndividualSupply;\\n        _gateway = gateway;\\n    }\\n}\\n\"\n    },\n    \"src/Test/ERC20WithInitialBalance.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.7.1;\\n\\nimport \\\"./BaseERC20.sol\\\";\\nimport \\\"../Interfaces/ERC20With2612.sol\\\";\\n\\n///@notice test ERC20 token that give initial balance to all accounts that can claim it in time.\\ncontract ERC20WithInitialBalance is BaseERC20, ERC20With2612 {\\n    // TODO inject actual hash or use 0.6.12\\n    bytes32 internal constant PERMIT_TYPEHASH = keccak256(\\n        \\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\"\\n    );\\n\\n    function DOMAIN_SEPARATOR() external view override returns (bytes32) {\\n        return _domainSeparator;\\n    }\\n\\n    function nonces(address owner) external view override returns (uint256) {\\n        return _nonces[owner];\\n    }\\n\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external override {\\n        require(owner != address(0), \\\"INVALID_ZERO_ADDRESS\\\");\\n\\n        uint256 currentNonce = _nonces[owner];\\n        bytes32 digest = keccak256(\\n            abi.encodePacked(\\n                \\\"\\\\x19\\\\x01\\\",\\n                _domainSeparator,\\n                keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, currentNonce, deadline))\\n            )\\n        );\\n        require(owner == ecrecover(digest, v, r, s), \\\"INVALID_SIGNATURE\\\");\\n        require(deadline == 0 || block.timestamp <= deadline, \\\"TOO_LATE\\\");\\n\\n        _nonces[owner] = currentNonce + 1;\\n        _allowances[owner][spender] = value;\\n        emit Approval(owner, spender, value);\\n    }\\n\\n    // /////////////////////////////////// STORAGE SLOTS /////////////////////////////////////////\\n\\n    bytes32 internal immutable _domainSeparator;\\n    mapping(address => uint256) internal _nonces;\\n\\n    // //////////////////////////////////// CONSTRUCTOR ///////////////////////////////////////////\\n\\n    constructor(\\n        uint256 supply,\\n        uint256 initialIndividualSupply,\\n        address gateway\\n    ) BaseERC20(supply, initialIndividualSupply, gateway) {\\n        // TODO chainId\\n        _domainSeparator = keccak256(\\n            abi.encode(\\n                keccak256(\\\"EIP712Domain(string name,string version,address verifyingContract)\\\"),\\n                keccak256(bytes(name)),\\n                keccak256(bytes(\\\"1\\\")),\\n                address(this)\\n            )\\n        );\\n    }\\n}\\n\"\n    },\n    \"src/Interfaces/ERC20With2612.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.7.1;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface ERC20With2612 is IERC20 {\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    function nonces(address owner) external view returns (uint256);\\n\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\"\n    }\n  },\n  \"settings\": {\n    \"optimizer\": {\n      \"enabled\": true,\n      \"runs\": 1000\n    },\n    \"outputSelection\": {\n      \"*\": {\n        \"*\": [\n          \"abi\",\n          \"evm.bytecode\",\n          \"evm.deployedBytecode\",\n          \"evm.methodIdentifiers\",\n          \"metadata\",\n          \"devdoc\",\n          \"userdoc\",\n          \"storageLayout\",\n          \"evm.gasEstimates\"\n        ],\n        \"\": [\n          \"ast\"\n        ]\n      }\n    },\n    \"metadata\": {\n      \"useLiteralContent\": true\n    }\n  }\n}",
      "solcInputHash": "5b447e3cd6c3433eea34129bb6b6a37b",
      "transactionHash": "0x12664c403c7991c3ec81ef3933ab6a8d9b9157f55e84e34cd38965bc815a45bb",
      "args": [
        "10000000000000000000",
        "1000000000000000000000000000",
        "0xA9eA1dc4f1901346C590f10ce95FCC21a29F97Dd"
      ]
    },
    "decoded": {
      "from": "0x609683612D80A091C69747a76ec6efE284a7cf46",
      "gasPrice": "3000000000",
      "gasLimit": "744005",
      "to": null,
      "value": "0",
      "nonce": 48,
      "data": "0x61010060405234801561001157600080fd5b50604051610de9380380610de98339818101604052606081101561003457600080fd5b508051602080830151604093840151608093845260a09182526001600160601b0319606091821b1660c05284518086018652600481526321b7b4b760e11b908401528451808601865260018152603160f81b9084015284517f91ab3d17e3a50a9d89e63fd30b92be7f5336b03b287bb946787a83a9d62a2766818501527f07fa16837b0b8cc4f178ea82c59160a6e5e93daa4f0f237ee2f1ae74266c5fb7818701527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc69181019190915230818501528451808203909401845201909252805191012060e05260805160a05160c05160601c60e051610c7a61016f600039806105c852806107695250806103a552806104d75280610951525080610bec5280610c155250806104945280610b975280610bca5250610c7a6000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c806370a0823111610081578063a9059cbb1161005b578063a9059cbb14610260578063d505accf1461028c578063dd62ed3e146102df576100d4565b806370a082311461020c5780637ecebe001461023257806395d89b4114610258576100d4565b806323b872dd116100b257806323b872dd146101b0578063313ce567146101e65780633644e51514610204576100d4565b806306fdde03146100d9578063095ea7b31461015657806318160ddd14610196575b600080fd5b6100e161030d565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561011b578181015183820152602001610103565b50505050905090810190601f1680156101485780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101826004803603604081101561016c57600080fd5b506001600160a01b038135169060200135610346565b604080519115158252519081900360200190f35b61019e610492565b60408051918252519081900360200190f35b610182600480360360608110156101c657600080fd5b506001600160a01b038135811691602081013590911690604001356104b6565b6101ee6105c1565b6040805160ff9092168252519081900360200190f35b61019e6105c6565b61019e6004803603602081101561022257600080fd5b50356001600160a01b03166105ea565b61019e6004803603602081101561024857600080fd5b50356001600160a01b03166105fc565b6100e1610617565b6101826004803603604081101561027657600080fd5b506001600160a01b038135169060200135610650565b6102dd600480360360e08110156102a257600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060ff6080820135169060a08101359060c00135610666565b005b61019e600480360360408110156102f557600080fd5b506001600160a01b038135811691602001351661094d565b6040518060400160405280600481526020017f436f696e0000000000000000000000000000000000000000000000000000000081525081565b60006001600160a01b0383166103a3576040805162461bcd60e51b815260206004820152601460248201527f494e56414c49445f5a45524f5f41444452455353000000000000000000000000604482015290519081900360640190fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b0316141561042a576040805162461bcd60e51b815260206004820152601b60248201527f494d4d555441424c455f474154455741595f414c4c4f57414e43450000000000604482015290519081900360640190fd5b3360008181526001602090815260408083206001600160a01b03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060015b92915050565b7f000000000000000000000000000000000000000000000000000000000000000090565b6000336001600160a01b038516148015906104fa5750336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614155b156105ac576001600160a01b038416600090815260016020908152604080832033845290915290205460001981146105aa5782811015610581576040805162461bcd60e51b815260206004820152601460248201527f4e4f545f454e4f5547485f414c4c4f57414e4345000000000000000000000000604482015290519081900360640190fd5b6001600160a01b0385166000908152600160209081526040808320338452909152902083820390555b505b6105b78484846109be565b5060019392505050565b601290565b7f000000000000000000000000000000000000000000000000000000000000000090565b60006105f582610b68565b9392505050565b6001600160a01b031660009081526004602052604090205490565b6040518060400160405280600481526020017f434f494e0000000000000000000000000000000000000000000000000000000081525081565b600061065d3384846109be565b50600192915050565b6001600160a01b0387166106c1576040805162461bcd60e51b815260206004820152601460248201527f494e56414c49445f5a45524f5f41444452455353000000000000000000000000604482015290519081900360640190fd5b6001600160a01b0380881660008181526004602090815260408083205481517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98185015280830195909552948b166060850152608084018a905260a0840185905260c08085018a90528151808603909101815260e0850182528051908301207f19010000000000000000000000000000000000000000000000000000000000006101008601527f000000000000000000000000000000000000000000000000000000000000000061010286015261012280860191909152815180860390910181526101428501808352815191840191909120939052610162840180825283905260ff88166101828501526101a284018790526101c284018690525191926001926101e28083019392601f198301929081900390910190855afa15801561080b573d6000803e3d6000fd5b505050602060405103516001600160a01b0316896001600160a01b03161461087a576040805162461bcd60e51b815260206004820152601160248201527f494e56414c49445f5349474e4154555245000000000000000000000000000000604482015290519081900360640190fd5b8515806108875750854211155b6108d8576040805162461bcd60e51b815260206004820152600860248201527f544f4f5f4c415445000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b6001600160a01b03808a16600081815260046020908152604080832060018089019091558252808320948d16808452948252918290208b905581518b815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050505050505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b03161415610992575060001961048c565b506001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b038216610a19576040805162461bcd60e51b815260206004820152601460248201527f494e56414c49445f5a45524f5f41444452455353000000000000000000000000604482015290519081900360640190fd5b600080610a2585610b68565b9150915082811015610a7e576040805162461bcd60e51b815260206004820152601260248201527f4e4f545f454e4f5547485f42414c414e43450000000000000000000000000000604482015290519081900360640190fd5b81610aaf5760028054820190556001600160a01b0385166000908152600360205260409020805460ff191660011790555b6001600160a01b03851660009081526020819052604090208382039055610ad584610b68565b909250905081610b0b5760028054820190556001600160a01b0384166000908152600360205260409020805460ff191660011790555b6001600160a01b038085166000818152602081815260409182902085880190558151878152915192938916927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050505050565b6001600160a01b03811660009081526020818152604080832054600390925282205460ff16158015610bbb57507f0000000000000000000000000000000000000000000000000000000000000000600254105b15610c3a5750506002546000907f0000000000000000000000000000000000000000000000000000000000000000037f0000000000000000000000000000000000000000000000000000000000000000811115610c3557507f00000000000000000000000000000000000000000000000000000000000000005b610c3f565b600191505b91509156fea26469706673582212202913bd387abf3da38ae1b8c06c0d748a7cc8c427131484ae6534994a5082eba964736f6c634300070100330000000000000000000000000000000000000000000000008ac7230489e800000000000000000000000000000000000000000000033b2e3c9fd0803ce8000000000000000000000000000000a9ea1dc4f1901346c590f10ce95fcc21a29f97dd",
      "r": "0xf2e68f8f997005d85c521dfd50d88ae512f8dadf6a412c7280ad0e8851a39bba",
      "s": "0x07776ca9c428a2074d2c694cd6e15391813ebd3eaf6a4ec7a522599f29f7f81e",
      "v": 46,
      "chainId": 5
    }
  }
}